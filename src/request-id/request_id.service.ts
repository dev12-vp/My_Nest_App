import { Injectable, Scope } from "@nestjs/common";
import { randomUUID } from "crypto";

/* 
What is an Injection Scope?
  In NestJS, injection scope decides how long a provider (service) instance lives and how itâ€™s shared between requests or parts of the app.,
  
  By default, NestJS providers are singleton (one instance for the whole app).
  You can change this:

  ðŸ”¹Scope.DEFAULT â†’ Singleton
  ðŸ”¹Scope.TRANSIENT â†’ New instance every time itâ€™s injected
  ðŸ”¹Scope.REQUEST â†’ New instance per HTTP request
*/

@Injectable({ scope: Scope.REQUEST })
export class RequestIdService {
    private readonly requestId: string

    constructor() {
        this.requestId = randomUUID()
    }

    getId() {
        return this.requestId
    }
}